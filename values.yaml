replicaCount: 1

image:
  repository: gatewaydio/gatewayd
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 15432

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Define a Pod Disruption Budget
# ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
# minAvailable and maxUnavailable cannot be both set
podDisruptionBudget:
  minAvailable: 1
  # maxUnavailable: 1

# If gatewaydPluginsConfig is disabled, GatewayD will use the default plugin configuration.
# The default config can be found here: https://github.com/gatewayd-io/gatewayd/blob/main/gatewayd_plugins.yaml
gatewaydPluginsConfig:
  enabled: true

# If gatewaydConfig is disabled, GatewayD will use the default configuration.
# The default config can be found here: https://github.com/gatewayd-io/gatewayd/blob/main/gatewayd.yaml
gatewaydConfig: 
  enabled: true

# Configuration can be overridden using environment variables. 
# For more details, visit: https://docs.gatewayd.io/using-gatewayd/configuration/#environment-variables
# extraEnvVars:
#   GATEWAYD_CLIENTS_DEFAULT_WRITES_ADDRESS: psql-postgresql:5432
#   GATEWAYD_LOGGERS_DEFAULT_LEVEL: debug # For production, use info
