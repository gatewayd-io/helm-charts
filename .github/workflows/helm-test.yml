# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "8-add-configmap" ]
  pull_request:
    branches: [ "8-add-configmap" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  example:
    name: Minikube installation - Basic test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.7.2
        with:
          minikube version: 'v1.32.0'
          kubernetes version: 'v1.28.3'
          github token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install PostgreSQL
        run: helm install psql oci://registry-1.docker.io/bitnamicharts/postgresql --set global.postgresql.auth.postgresPassword=postgres
      - name: Check deployment status
        run: |
          kubectl rollout status --watch statefulset/psql-postgresql --timeout=5m
      - name: Wait for PostgreSQL database to start
        run: |
          for n in [ 0 1 2 3 4 5 6 7 8 9 ]
          do
            if kubectl logs pod/psql-postgresql-0 | grep 'database system is ready to accept connections'
            then
              exit 0
            fi
            sleep 30
          done
          echo PostgreSQL did not start within 300 seconds!
          exit 1
      - name: Install gatewayd
        run: helm install gatewayd . 
      - name: Check deployment status
        run: |
          kubectl rollout status --watch deployment/gatewayd --timeout=5m
      - name: Wait for gatewayd to start
        run: status=$(kubectl get pod | grep gatewayd | awk '{print $2}' | grep 0); if [ -z "$status" ]; then echo "It's not okay"; exit 1; else echo "It's okay"; fi
